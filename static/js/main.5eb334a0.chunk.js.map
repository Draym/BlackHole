{"version":3,"sources":["web/views/game/GameNavbar.tsx","web/views/game/GameLoading.tsx","blockchain/Web3Utils.tsx","blockchain/Lina.tsx","utils/NumberUtils.tsx","blockchain/definition/data/Territory.tsx","blockchain/definition/data/NokaiPos.tsx","game/BlackHole.tsx","web/views/game/data/Point.tsx","web/views/game/BoardCase.tsx","web/views/game/GameBoard.tsx","blockchain/ContractLoader.tsx","web/views/GameView.tsx","web/views/home/HomeLoading.tsx","web/views/home/Navbar.tsx","web/views/home/TutorialView.tsx","web/views/HomeView.tsx","web/views/MarketView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["GameNavbar","props","state","networkId","account","loading","a","this","setState","className","href","target","rel","icon","style","color","Component","GameLoading","Web3Utils","window","ethereum","request","method","accounts","web3","Web3","defaultAccount","on","alert","detectEthereumProvider","provider","console","log","result","length","eth","net","getId","e","value","utils","fromAscii","Lina","data","call","from","send","getDefaultAccount","NumberUtils","BigInt","parseInt","toString","parseTerritory","x","y","darkEnergy","darkMatter","plasmaEnergy","voidEssence","extractor","level","cost","lastExtract","nokai","owner","discovered","parseNokaiPos","onBoard","BlackHole","contract","methods","maxX","maxY","totalPos","choices","getFor","map","to","getForRange","startPos","endPos","startLine","endLine","getForBox","postX","posY","get","extractorCostAt","user","territoryCount","nokaiId","nokaiPos","nokaiAt","callback","events","SlotDiscovered","search","SlotConquered","NokaiMoved","TerritoryExtracted","ExtractorUpgraded","Point","BoardCase","Number","size","event","onMouseEnter","onMouseOver","onMouseLeave","onClick","corners","point","interval","spacing","points","calculateCoordinates","join","fill","GameBoard","_handleKeyUp","keyCode","preventDefault","moveCameraY","moveCameraX","_handleKeyDown","cameraX","cameraY","caseLength","cameraMaxX","cameraMaxY","minX","minY","positions","Promise","all","getMaxX","blackhole","getMaxY","then","values","drawCamera","document","addEventListener","removeEventListener","getTerritoryForBox","territories","forEach","territory","index","lineCount","lineIndex","origin","pos","posX","width","getCameraMaxX","height","getCameraMaxY","viewBox","getCameraPosX","getCameraPosY","border","marginBottom","Object","keys","key","i","ContractLoader","getNetwork","BlackHoleData","networks","Contract","abi","address","GameView","backToLobby","history","push","walletConnected","setupState","bind","loadBlockchainData","loadContracts","listenNetworkChanges","listenAccountChanges","loginMetamask","isMetamaskConnected","loadMetamask","instantiateBlackHole","getEth","chainId","content","Button","variant","Modal","show","backdrop","keyboard","centered","animation","Header","closeButton","Title","Body","Footer","withRouter","HomeLoading","Navbar","loadData","loadAccountsData","TutorialView","HomeView","launchGame","current","path","MarketView","library","add","faGithub","faLinkedinIn","App","role","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5eb334a0.chunk.js","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\n\ntype GameNavbarProperties = {\n    networkId: bigint,\n    account: string,\n}\n\ntype GameNavbarState = {\n    networkId: bigint,\n    account: string,\n    loading: boolean\n}\n\nexport default class GameNavbar extends Component<GameNavbarProperties, GameNavbarState> {\n    constructor(props: GameNavbarProperties) {\n        super(props)\n        this.state = {\n            networkId: props.networkId,\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> BlackHole Game</span>\n            </a>\n            <span style={{color: 'white'}}>network: {this.state.networkId}</span>\n            <span className=\"me-3\" style={{color: 'white'}}>account: {this.state.account}</span>\n        </nav>\n    }\n}","import {Component} from \"react\";\n\ntype GameLoadingProperties = {}\n\ntype GameLoadingState = {}\n\nexport default class GameLoading extends Component<GameLoadingProperties, GameLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n            window.web3 = new Web3(window.ethereum)\n            window.ethereum.defaultAccount = accounts[0]\n            window.ethereum.on('accountsChanged', (accounts: string[]) => {\n                window.ethereum.defaultAccount = accounts[0]\n            })\n            return true\n        }\n        // else if (window.web3) {\n        //     window.web3 = new Web3(window.web3.currentProvider)\n        //     return true\n        // }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n            return false\n        }\n    }\n\n    static async isMetamaskInstalled() {\n        const provider = await detectEthereumProvider();\n        return !!provider;\n    }\n\n    static async isMetamaskConnected() {\n        const provider = await detectEthereumProvider()\n\n        if (provider) {\n            console.log('Metamask successfully detected!');\n            const result = await window.ethereum.request({method: 'eth_accounts'})\n            return result.length > 0\n        } else {\n            console.log('Metamask is not installed!');\n            return false\n        }\n    }\n\n    // @ts-ignore\n    static getEth(): EthereumProvider | null {\n        return window.ethereum\n    }\n\n    static async getNetwork(): Promise<bigint> {\n        console.log(\"get network\")\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts(): Promise<string[]> {\n        return await window.ethereum.request({method: 'eth_accounts'})\n    }\n\n    static getDefaultAccount(): string | null {\n        try {\n            return window.ethereum.defaultAccount\n        } catch (e) {\n            return null\n        }\n    }\n\n    static encode(value: string): string {\n        return window.web3.utils.fromAscii(value)\n    }\n\n    static nullAddress() {\n        return '0x0000000000000000000000000000000000000000';\n    }\n\n    static nullBytes() {\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n    }\n}","import Web3Utils from \"./Web3Utils\";\n\nexport default class Lina {\n\n    static async call(method: any, data: object = {}) {\n        return method.call({from: Lina.account(), ...data})\n    }\n\n    static async send(method: any, data: object = {}) {\n        return method.send({from: Lina.account(), ...data})\n    }\n\n    static account() {\n        return Web3Utils.getDefaultAccount()\n    }\n}","export default class NumberUtils {\n    static from(value: any): bigint {\n        return BigInt(parseInt(value.toString()))\n    }\n}","import {Extractor} from \"./Extractor\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\n\nexport interface Territory {\n    x: bigint,\n    y: bigint,\n    darkEnergy: bigint,\n    darkMatter: bigint,\n    plasmaEnergy: bigint,\n    voidEssence: bigint,\n    extractor: Extractor,\n    nokai: bigint,\n    owner: string,\n    discovered: boolean\n}\n\nexport function parseTerritory(data: any): Territory {\n    return {\n        x: NumberUtils.from(data.x),\n        y: NumberUtils.from(data.y),\n        darkEnergy: NumberUtils.from(data.darkEnergy),\n        darkMatter: NumberUtils.from(data.darkMatter),\n        plasmaEnergy: NumberUtils.from(data.plasmaEnergy),\n        voidEssence: NumberUtils.from(data.voidEssence),\n        extractor: {\n            level: NumberUtils.from(data.extractor.level),\n            cost: NumberUtils.from(data.extractor.cost),\n            lastExtract: NumberUtils.from(data.extractor.lastExtract),\n        },\n        nokai: NumberUtils.from(data.nokai),\n        owner: data.owner,\n        discovered: data.discovered\n    }\n}","import NumberUtils from \"../../../utils/NumberUtils\";\n\nexport interface NokaiPos {\n    onBoard: boolean,\n    x: bigint,\n    y: bigint\n}\n\nexport function parseNokaiPos(data: any): NokaiPos {\n    return {\n        onBoard: data.onBoard,\n        x: NumberUtils.from(data.x),\n        y: NumberUtils.from(data.y)\n    }\n}","import Lina from \"../blockchain/Lina\";\nimport {parseTerritory, Territory} from \"../blockchain/definition/data/Territory\";\nimport {\n    BlackHoleContract,\n    ExtractorUpgraded,\n    NokaiMoved,\n    NokaiMovedSearch,\n    SlotConquered,\n    SlotConqueredSearch,\n    SlotDiscovered,\n    TerritoryExtracted\n} from \"../blockchain/definition/BlackHoleContract\";\nimport {Address, NokaiId} from \"../blockchain/definition/types\";\nimport {NokaiPos, parseNokaiPos} from \"../blockchain/definition/data/NokaiPos\";\nimport NumberUtils from \"../utils/NumberUtils\";\n\nexport default class BlackHole {\n\n    static async getMaxX(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.maxX()))\n    }\n\n    static async getMaxY(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.maxY()))\n    }\n\n    static async getTotalPos(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.totalPos()))\n    }\n\n    static async getTerritoryFor(contract: BlackHoleContract, choices: bigint[]): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getFor(choices))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n    static async getTerritoryForRange(contract: BlackHoleContract, from: bigint, to: bigint): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getForRange(from, to))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n\n    static async getTerritoryForBox(contract: BlackHoleContract, startPos: bigint, endPos: bigint, startLine: bigint, endLine: bigint): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getForBox(startPos, endPos, startLine, endLine))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n\n\n    static async getTerritory(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<Territory> {\n        return parseTerritory(await Lina.call(contract.methods.get(postX, posY)))\n    }\n\n    static async getExtractorCostAt(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.extractorCostAt(postX, posY)))\n    }\n\n    static async countTerritoryFor(contract: BlackHoleContract, user: Address): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.territoryCount(user)))\n    }\n\n    static async getNokaiPos(contract: BlackHoleContract, nokaiId: NokaiId): Promise<NokaiPos> {\n        return parseNokaiPos(await Lina.call(contract.methods.nokaiPos(nokaiId)))\n    }\n\n    static async getNokaiAt(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<NokaiId> {\n        return NumberUtils.from(await Lina.call(contract.methods.nokaiAt(postX, posY)))\n    }\n\n    static subscribeSlotDiscovered(contract: BlackHoleContract, callback: (data: SlotDiscovered) => any) {\n        contract.events.SlotDiscovered().on('data', callback)\n    }\n\n    static subscribeSlotConquered(contract: BlackHoleContract, search: SlotConqueredSearch, callback: (data: SlotConquered) => any) {\n        contract.events.SlotConquered(search).on('data', callback)\n    }\n\n    static subscribeNokaiMoved(contract: BlackHoleContract, search: NokaiMovedSearch, callback: (data: NokaiMoved) => any) {\n        contract.events.NokaiMoved(search).on('data', callback)\n    }\n\n    static subscribeTerritoryExtracted(contract: BlackHoleContract, callback: (data: TerritoryExtracted) => any) {\n        contract.events.TerritoryExtracted().on('data', callback)\n    }\n\n    static subscribeExtractorUpgraded(contract: BlackHoleContract, callback: (data: ExtractorUpgraded) => any) {\n        contract.events.ExtractorUpgraded().on('data', callback)\n    }\n}","export class Point {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}","import {Component} from \"react\";\nimport {Point} from \"./data/Point\";\n\ntype TerritoryProperties = {\n    x: bigint,\n    y: bigint,\n    size: bigint,\n    onClick: ((x: bigint, y: bigint) => void) | null,\n    onMouseEnter: ((x: bigint, y: bigint) => void) | null,\n    onMouseLeave: ((x: bigint, y: bigint) => void) | null,\n    onMouseOver: ((x: bigint, y: bigint) => void) | null,\n}\n\ntype TerritoryState = {\n    loading: boolean,\n    x: number,\n    y: number,\n    size: number,\n}\n\nexport default class BoardCase extends Component<TerritoryProperties, TerritoryState> {\n\n    static readonly spacing: number = 30\n    static readonly corners: Point[] = [\n        new Point(50, 0),\n        new Point(100, BoardCase.spacing),\n        new Point(100, 100 - BoardCase.spacing),\n        new Point(50, 100),\n        new Point(0, 100 - BoardCase.spacing),\n        new Point(0, BoardCase.spacing),\n    ]\n\n    constructor(props: TerritoryProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n            x: Number(props.x),\n            y: Number(props.y),\n            size: Number(props.size),\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    onMouseEnter(event: any) {\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(this.props.x, this.props.y);\n        }\n    }\n\n    onMouseOver(event: any) {\n        if (this.props.onMouseOver) {\n            this.props.onMouseOver(this.props.x, this.props.y);\n        }\n    }\n\n    onMouseLeave(event: any) {\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(this.props.x, this.props.y);\n        }\n    }\n\n    onClick(event: any) {\n        if (this.props.onClick) {\n            this.props.onClick(this.props.x, this.props.y);\n        }\n    }\n\n    calculateCoordinates(): Point[] {\n        return BoardCase.corners.map(point => {\n            let interval = (this.state.y % 2 === 1 ? 0.5 : 0)\n           return new Point(\n               (point.x * this.state.size / 100) + ((this.state.x + interval) * this.state.size),\n               (point.y * this.state.size / 100) + (this.state.y* this.state.size) - (BoardCase.spacing * this.state.y)\n        )\n        })\n    }\n\n    render() {\n        const x = this.state.x\n        const y = this.state.y\n        const points = this.calculateCoordinates().map( point => `${point.x},${point.y}`).join(\" \")\n\n        console.log(`points: [${x}, ${y}]`, points)\n        return <g\n            className={'hexagon-group'}\n            onMouseEnter={e => this.onMouseEnter(e)}\n            onMouseOver={e => this.onMouseOver(e)}\n            onMouseLeave={e => this.onMouseLeave(e)}\n            onClick={e => this.onClick(e)}>\n            <g className=\"hexagon\">\n                <text fill=\"black\">{this.state.x}, {this.state.y}</text>\n                <polygon points={points}></polygon>\n            </g>\n        </g>\n        //<ellipse cx={x * 100} cy={y * 100} rx=\"50\" ry=\"50\" fill={color}></ellipse>\n        //<rect x={x * 100} y={y * 100} width=\"100\" height=\"100\" fill={color}></rect>\n    }\n}","import {Component} from \"react\";\nimport BlackHole from \"../../../game/BlackHole\";\nimport {BlackHoleContract} from \"../../../blockchain/definition/BlackHoleContract\";\nimport BoardCase from \"./BoardCase\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\nimport {Territory} from \"../../../blockchain/definition/data/Territory\";\n\ntype GameBoardProperties = {\n    blackhole: BlackHoleContract\n}\n\ntype GameBoardState = {\n    loading: boolean,\n    cameraX: bigint,\n    cameraY: bigint,\n    caseLength: bigint,\n    cameraMaxX: bigint,\n    cameraMaxY: bigint,\n    minX: bigint,\n    minY: bigint\n    maxX: bigint,\n    maxY: bigint,\n    positions: { [key: number]: Territory }\n}\n\nexport default class GameBoard extends Component<GameBoardProperties, GameBoardState> {\n\n    constructor(props: GameBoardProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n            cameraX: BigInt(1),\n            cameraY: BigInt(1),\n            caseLength: BigInt(100),\n            cameraMaxX: BigInt(14),\n            cameraMaxY: BigInt(8),\n            minX: BigInt(0),\n            minY: BigInt(0),\n            maxX: BigInt(0),\n            maxY: BigInt(0),\n            positions: {}\n        }\n    }\n\n    async componentDidMount() {\n        Promise.all([\n            BlackHole.getMaxX(this.props.blackhole),\n            BlackHole.getMaxY(this.props.blackhole)\n        ]).then((values) => {\n            this.setState({maxX: values[0], maxY: values[1]})\n\n            this.drawCamera(BigInt(0), this.state.cameraMaxX + BigInt(1), BigInt(0), this.state.cameraMaxY + BigInt(5)).then(() => {\n                this.setState({loading: false})\n            })\n        });\n\n        document.addEventListener(\"keydown\", this._handleKeyDown)\n        document.addEventListener(\"keyup\", this._handleKeyUp)\n    }\n\n    componentWillUnmount() {\n        document.addEventListener(\"keydown\", this._handleKeyDown)\n        document.removeEventListener(\"keyup\", this._handleKeyUp)\n    }\n\n    async drawCamera(startPos: bigint, endPos: bigint, startLine: bigint, endLine: bigint) {\n        BlackHole.getTerritoryForBox(this.props.blackhole, startPos, endPos, startLine, endLine).then(territories => {\n            let positions: { [key: number]: Territory } = {}\n            territories.forEach((territory, index) => {\n                const lineCount = endPos - startPos\n                const lineIndex: bigint = (BigInt(index) / lineCount) + startLine\n                const origin: bigint = (lineIndex * this.state.maxX) + startPos\n                const pos: bigint = origin + (BigInt(index) % lineCount)\n                console.log(lineIndex, origin, index, \"_\", pos, \"=>\", territory)\n                positions[Number(pos)] = territory\n            })\n            this.setState({positions: {...this.state.positions, ...positions}})\n        })\n    }\n\n    moveCameraX(value: number) {\n        let posX: bigint = this.state.cameraX + BigInt(value)\n        if (posX < 0) {\n            posX = BigInt(0)\n        }\n        if (posX > this.state.maxX) {\n            posX = this.state.maxX\n        }\n        this.setState({cameraX: posX})\n        console.log(posX + this.state.cameraMaxX, posX + this.state.cameraMaxX + BigInt(1), this.state.cameraY, this.state.cameraY + this.state.cameraMaxY+ BigInt(5))\n        if (posX + this.state.cameraMaxX + BigInt(1) < this.state.maxX) {\n            this.drawCamera(posX + this.state.cameraMaxX, posX + this.state.cameraMaxX + BigInt(1), this.state.cameraY, this.state.cameraY + this.state.cameraMaxY + BigInt(5))\n        }\n    }\n\n    moveCameraY(value: number) {\n        let posY = this.state.cameraY + BigInt(value)\n        if (posY < 0) {\n            posY = BigInt(0)\n        }\n        if (posY > this.state.maxY) {\n            posY = this.state.maxY\n        }\n        this.setState({cameraY: posY})\n        console.log(this.state.cameraX, this.state.cameraX + this.state.cameraMaxX, posY + this.state.cameraMaxY, posY + this.state.cameraMaxY + BigInt(1))\n        if (posY + this.state.cameraMaxY + BigInt(1) < this.state.maxY - this.state.cameraY) {\n            this.drawCamera(this.state.cameraX, this.state.cameraX + this.state.cameraMaxX + BigInt(1), posY + this.state.cameraMaxY, posY + this.state.cameraMaxY + BigInt(1))\n        }\n    }\n\n    _handleKeyUp = (event: { keyCode: number, preventDefault: any }) => {\n        switch (event.keyCode) {\n            case 40: // BOTTOM\n                event.preventDefault()\n                this.moveCameraY(1)\n                break\n            case 39: // RIGHT\n                event.preventDefault()\n                this.moveCameraX(1)\n                break\n            case 38: // TOP\n                event.preventDefault()\n                this.moveCameraY(-1)\n                break\n            case 37: // LEFT\n                event.preventDefault()\n                this.moveCameraX(-1)\n                break\n            default:\n                break\n        }\n    }\n\n    _handleKeyDown = (event: { keyCode: number, preventDefault: any }) => {\n        switch (event.keyCode) {\n            case 40: // BOTTOM\n                event.preventDefault()\n                break\n            case 39: // RIGHT\n                event.preventDefault()\n                break\n            case 38: // TOP\n                event.preventDefault()\n                break\n            case 37: // LEFT\n                event.preventDefault()\n                break\n            default:\n                break\n        }\n    }\n\n    private getCameraPosX(): number {\n        return Number(this.state.cameraX * this.state.caseLength)\n    }\n\n    private getCameraPosY(): number {\n        return Number(this.state.cameraY * this.state.caseLength)\n    }\n\n    private getCameraMaxX(): number {\n        return Number(this.state.cameraMaxX * this.state.caseLength)\n    }\n\n    private getCameraMaxY(): number {\n        return Number(this.state.cameraMaxY * this.state.caseLength)\n    }\n\n\n    render() {\n        console.log(\"DRAW AGAIN\")\n        return <div>\n            <h4>Camera [{Number(this.state.cameraX)}, {Number(this.state.cameraY)}] __ Map [{Number(this.state.maxX)}, {Number(this.state.maxY)}]</h4>\n            <svg width={this.getCameraMaxX()} height={this.getCameraMaxY()}\n                 viewBox={`${this.getCameraPosX()} ${this.getCameraPosY()} ${this.getCameraMaxX()} ${this.getCameraMaxY()}`} style={{border: \"1px solid black\", marginBottom: 20}}>\n\n                {Object.keys(this.state.positions).map((key, i) => {\n                    const index = NumberUtils.from(key)\n                    return <BoardCase x={index % this.state.maxX} y={index / this.state.maxX} size={this.state.caseLength} key={i} onClick={null} onMouseEnter={null} onMouseLeave={null} onMouseOver={null}/>\n                })\n                }\n            </svg>\n        </div>\n    }\n}","import BlackHole from './contracts/BlackHole.json';\nimport Web3Utils from \"./Web3Utils\";\nimport {BlackHoleContract} from \"./definition/BlackHoleContract\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n\n    static async instantiateBlackHole(): Promise<BlackHoleContract | null> {\n        console.log(\"load blackhole\")\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const BlackHoleData = BlackHole.networks[networkId]\n        console.log(\"BlackHoleData\", BlackHoleData)\n        if (BlackHoleData) {\n            return new window.web3.eth.Contract(BlackHole.abi, BlackHoleData.address)\n        } else {\n            window.alert('BlackHole contract not deployed to detected network.')\n            return null\n        }\n    }\n\n}","import {Component} from \"react\";\nimport GameNavbar from \"./game/GameNavbar\";\nimport GameLoading from \"./game/GameLoading\";\nimport Web3Utils from \"../../blockchain/Web3Utils\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport GameBoard from \"./game/GameBoard\";\nimport ContractLoader from \"../../blockchain/ContractLoader\";\nimport {BlackHoleContract} from \"../../blockchain/definition/BlackHoleContract\";\n\ninterface GameViewProperties extends RouteComponentProps {\n}\n\ntype GameViewState = {\n    blackhole: BlackHoleContract | null,\n    networkId: bigint | null,\n    account: string | null,\n    walletConnected: boolean,\n    loading: boolean\n}\n\nclass GameView extends Component<GameViewProperties, GameViewState> {\n    constructor(props: GameViewProperties) {\n        super(props)\n        this.state = {\n            blackhole: null,\n            networkId: null,\n            account: null,\n            walletConnected: false,\n            loading: true\n        }\n        this.setupState = this.setupState.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n        this.loadContracts = this.loadContracts.bind(this)\n        this.listenNetworkChanges = this.listenNetworkChanges.bind(this)\n        this.listenAccountChanges = this.listenAccountChanges.bind(this)\n        this.loginMetamask = this.loginMetamask.bind(this)\n        this.backToLobby = this.backToLobby.bind(this)\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.setupState()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async setupState() {\n        console.log(\"load data\")\n        await this.loadBlockchainData()\n        await this.listenNetworkChanges()\n        await this.listenAccountChanges()\n    }\n\n    async loadBlockchainData() {\n        const account = await Web3Utils.getDefaultAccount()\n        const networkId = await Web3Utils.getNetwork()\n\n        console.log(\"load contract\")\n        await this.loadContracts()\n\n        this.setState({account: account, loading: false, networkId: networkId, walletConnected: true})\n    }\n\n    async loadContracts() {\n        const blackhole = await ContractLoader.instantiateBlackHole()\n\n        this.setState({\n            blackhole: blackhole\n        })\n    }\n\n    async listenNetworkChanges() {\n        console.log(\"##listen network change\")\n        Web3Utils.getEth().on('chainChanged', (chainId: bigint) => {\n            console.log(\"network changed\", chainId)\n            this.setState({networkId: chainId})\n        })\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            if (accounts.length === 0) {\n                this.setState({account: null, walletConnected: false})\n            } else {\n                this.setState({account: accounts[0]})\n            }\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            console.log(\"trying load data\")\n            await this.setupState()\n        }\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        let content\n\n        if (this.state.loading) {\n            content = <GameLoading/>\n        } else if (!this.state.walletConnected) {\n            content = <div>\n                <Modal show={true} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered animation={false}>\n                    <Modal.Header closeButton={false}><Modal.Title>Metamask</Modal.Title></Modal.Header>\n                    <Modal.Body>\n                        A connection to your Metamask wallet is required in order to play in BlackHole. We will use this access to retrieve your NFT and tokens associated to the\n                        linked account.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.backToLobby}>\n                            Quit Game\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.loginMetamask}>Login Metamask</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        } else if (this.state.networkId != null && this.state.account != null && this.state.blackhole != null) {\n            content = <div>\n                <GameNavbar networkId={this.state.networkId} account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-9\">\n                            <GameBoard blackhole={this.state.blackhole}/>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <h1>Menu</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h2>some other UIs</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        } else if (this.state.blackhole == null) {\n            content = <div>\n                <h3>Error: The game is not deployed on your selected network ({this.state.networkId}). Please select a supported network on your Metamask.</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Go Back\n                </Button>\n            </div>\n        } else {\n            content = <div>\n                <h3>Error: unexpected error</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Quit Game\n                </Button>\n            </div>\n        }\n\n        return <div className=\"container-fluid mt-5\">\n            {content}\n        </div>\n    }\n}\n\nexport default withRouter(GameView);","import {Component} from \"react\";\n\ntype HomeLoadingProperties = {}\n\ntype HomeLoadingState = {}\n\nexport default class HomeLoading extends Component<HomeLoadingProperties, HomeLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\n\ntype NavbarProperties = {}\n\ntype NavbarState = {\n    walletConnected: boolean,\n    account: string | null,\n    loading: boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            walletConnected: false,\n            account: null,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.loadData()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async loadData() {\n        await this.loadAccountsData()\n        await this.listenAccountChanges()\n    }\n\n    async loadAccountsData() {\n        const account = await Web3Utils.getDefaultAccount()\n        this.setState({account: account, loading: false, walletConnected: true})\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            this.setState({account: accounts[0]})\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            await this.loadData()\n        }\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n            </a>\n\n            {this.state.walletConnected && this.state.account != null && <span style={{color: 'white'}}>{this.state.account}</span>}\n\n            {!this.state.loading && !this.state.walletConnected && <button onClick={this.loginMetamask}>Connect Metamask</button>}\n        </nav>\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface TutorialViewProperties extends RouteComponentProps {\n}\n\ntype TutorialViewState = {\n    loading: boolean\n}\n\nclass TutorialView extends Component<TutorialViewProperties, TutorialViewState> {\n    constructor(props: TutorialViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(TutorialView);","import {Component} from \"react\";\nimport HomeLoading from \"./home/HomeLoading\";\nimport {Route, RouteComponentProps, Switch, withRouter} from \"react-router-dom\";\nimport Navbar from \"./home/Navbar\";\nimport TutorialView from \"./home/TutorialView\";\nimport {Button} from \"react-bootstrap\";\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\n\ntype HomeViewState = {\n    loading: boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.launchGame = this.launchGame.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    launchGame = () => {\n        this.props.history.push('/play')\n    }\n\n    render() {\n        let current = <div>\n            <h2>Hello world!</h2>\n            <Button variant=\"primary\" onClick={this.launchGame}>\n                Launch Game\n            </Button>\n        </div>\n\n        if (this.state.loading) {\n            return <HomeLoading/>\n        } else {\n            return <div>\n                <Navbar/>\n                <div className=\"container-fluid mt-5\">\n                    <Switch>\n                        <Route path={\"/tutorial\"}>\n                            <TutorialView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            {current}\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface MarketViewProperties extends RouteComponentProps {\n}\n\ntype MarketViewState = {\n    loading: boolean\n}\n\nclass MarketView extends Component<MarketViewProperties, MarketViewState> {\n    constructor(props: MarketViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(MarketView);","import './App.scss';\nimport {Component} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport GameView from \"./web/views/GameView\";\nimport HomeView from \"./web/views/HomeView\";\nimport MarketView from \"./web/views/MarketView\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faGithub, faLinkedinIn);\n\nconst routerBaseName = process.env.PUBLIC_URL;\n\ninterface AppProperties {\n}\n\ninterface AppState {\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n\n    render() {\n        return <div className=\"App\">\n            <main role=\"main\">\n                <BrowserRouter basename={routerBaseName}>\n                    <Switch>\n                        <Route path={\"/play\"}>\n                            <GameView/>\n                        </Route>\n                        <Route path={\"/market\"}>\n                            <MarketView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            <HomeView/>\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </main>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}