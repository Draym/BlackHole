{"version":3,"sources":["web/views/game/GameNavbar.tsx","web/views/game/GameLoading.tsx","blockchain/Web3Utils.tsx","blockchain/Lina.tsx","utils/NumberUtils.tsx","blockchain/definition/data/Territory.tsx","blockchain/definition/data/NokaiPos.tsx","game/BlackHole.tsx","web/views/game/data/Point.tsx","web/views/game/BoardCase.tsx","utils/MathUtils.tsx","web/views/game/GameBoard.tsx","blockchain/ContractLoader.tsx","web/views/GameView.tsx","web/views/home/HomeLoading.tsx","web/views/home/Navbar.tsx","web/views/home/TutorialView.tsx","web/views/HomeView.tsx","web/views/MarketView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["GameNavbar","props","state","networkId","account","loading","a","this","setState","className","href","target","rel","icon","style","color","Component","GameLoading","Web3Utils","window","ethereum","request","method","accounts","web3","Web3","defaultAccount","on","alert","detectEthereumProvider","provider","console","log","result","length","eth","net","getId","e","value","utils","fromAscii","Lina","data","call","from","send","getDefaultAccount","NumberUtils","BigInt","parseInt","toString","parseTerritory","x","y","darkEnergy","darkMatter","plasmaEnergy","voidEssence","extractor","level","cost","lastExtract","nokai","owner","discovered","parseNokaiPos","onBoard","BlackHole","contract","methods","maxX","maxY","totalPos","choices","getFor","map","to","getForRange","startPos","endPos","startLine","endLine","getForBox","postX","posY","get","extractorCostAt","user","territoryCount","nokaiId","nokaiPos","nokaiAt","callback","events","SlotDiscovered","search","SlotConquered","NokaiMoved","TerritoryExtracted","ExtractorUpgraded","Point","BoardCase","event","onMouseEnter","index","onMouseOver","onMouseLeave","onClick","corners","point","size","posX","spacing","points","calculateCoordinates","join","fill","Number","MathUtils","Canvas","width","height","caseLength","Camera","totalX","totalY","Board","casesX","casesY","total","GameBoard","_handleKeyUp","keyCode","preventDefault","moveCameraY","moveCameraX","_handleKeyDown","canvas","camera","board","positions","Promise","all","getMaxX","blackhole","getMaxY","then","values","loadDataForCamera","document","addEventListener","removeEventListener","key","undefined","tmp","needQueryData","getTerritoryForBox","territories","forEach","territory","lineCount","pos","max","setX","setY","originX","originY","camX","camY","adjustX","isNotEven2","isNotEven","push","border","marginBottom","getCameraView","ContractLoader","getNetwork","BlackHoleData","networks","Contract","abi","address","GameView","backToLobby","history","walletConnected","setupState","bind","loadBlockchainData","loadContracts","listenNetworkChanges","listenAccountChanges","loginMetamask","isMetamaskConnected","loadMetamask","instantiateBlackHole","getEth","chainId","content","Button","variant","Modal","show","backdrop","keyboard","centered","animation","Header","closeButton","Title","Body","Footer","withRouter","HomeLoading","Navbar","loadData","loadAccountsData","TutorialView","HomeView","launchGame","current","path","MarketView","library","add","faGithub","faLinkedinIn","App","role","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4aab5d8d.chunk.js","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\n\ntype GameNavbarProperties = {\n    networkId: bigint,\n    account: string,\n}\n\ntype GameNavbarState = {\n    networkId: bigint,\n    account: string,\n    loading: boolean\n}\n\nexport default class GameNavbar extends Component<GameNavbarProperties, GameNavbarState> {\n    constructor(props: GameNavbarProperties) {\n        super(props)\n        this.state = {\n            networkId: props.networkId,\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> BlackHole Game</span>\n            </a>\n            <span style={{color: 'white'}}>network: {this.state.networkId}</span>\n            <span className=\"me-3\" style={{color: 'white'}}>account: {this.state.account}</span>\n        </nav>\n    }\n}","import {Component} from \"react\";\n\ntype GameLoadingProperties = {}\n\ntype GameLoadingState = {}\n\nexport default class GameLoading extends Component<GameLoadingProperties, GameLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n            window.web3 = new Web3(window.ethereum)\n            window.ethereum.defaultAccount = accounts[0]\n            window.ethereum.on('accountsChanged', (accounts: string[]) => {\n                window.ethereum.defaultAccount = accounts[0]\n            })\n            return true\n        }\n        // else if (window.web3) {\n        //     window.web3 = new Web3(window.web3.currentProvider)\n        //     return true\n        // }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n            return false\n        }\n    }\n\n    static async isMetamaskInstalled() {\n        const provider = await detectEthereumProvider();\n        return !!provider;\n    }\n\n    static async isMetamaskConnected() {\n        const provider = await detectEthereumProvider()\n\n        if (provider) {\n            console.log('Metamask successfully detected!');\n            const result = await window.ethereum.request({method: 'eth_accounts'})\n            return result.length > 0\n        } else {\n            console.log('Metamask is not installed!');\n            return false\n        }\n    }\n\n    // @ts-ignore\n    static getEth(): EthereumProvider | null {\n        return window.ethereum\n    }\n\n    static async getNetwork(): Promise<bigint> {\n        console.log(\"get network\")\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts(): Promise<string[]> {\n        return await window.ethereum.request({method: 'eth_accounts'})\n    }\n\n    static getDefaultAccount(): string | null {\n        try {\n            return window.ethereum.defaultAccount\n        } catch (e) {\n            return null\n        }\n    }\n\n    static encode(value: string): string {\n        return window.web3.utils.fromAscii(value)\n    }\n\n    static nullAddress() {\n        return '0x0000000000000000000000000000000000000000';\n    }\n\n    static nullBytes() {\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n    }\n}","import Web3Utils from \"./Web3Utils\";\n\nexport default class Lina {\n\n    static async call(method: any, data: object = {}) {\n        return method.call({from: Lina.account(), ...data})\n    }\n\n    static async send(method: any, data: object = {}) {\n        return method.send({from: Lina.account(), ...data})\n    }\n\n    static account() {\n        return Web3Utils.getDefaultAccount()\n    }\n}","export default class NumberUtils {\n    static from(value: any): bigint {\n        return BigInt(parseInt(value.toString()))\n    }\n}","import {Extractor} from \"./Extractor\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\n\nexport interface Territory {\n    x: bigint,\n    y: bigint,\n    darkEnergy: bigint,\n    darkMatter: bigint,\n    plasmaEnergy: bigint,\n    voidEssence: bigint,\n    extractor: Extractor,\n    nokai: bigint,\n    owner: string,\n    discovered: boolean\n}\n\nexport function parseTerritory(data: any): Territory {\n    return {\n        x: NumberUtils.from(data.x),\n        y: NumberUtils.from(data.y),\n        darkEnergy: NumberUtils.from(data.darkEnergy),\n        darkMatter: NumberUtils.from(data.darkMatter),\n        plasmaEnergy: NumberUtils.from(data.plasmaEnergy),\n        voidEssence: NumberUtils.from(data.voidEssence),\n        extractor: {\n            level: NumberUtils.from(data.extractor.level),\n            cost: NumberUtils.from(data.extractor.cost),\n            lastExtract: NumberUtils.from(data.extractor.lastExtract),\n        },\n        nokai: NumberUtils.from(data.nokai),\n        owner: data.owner,\n        discovered: data.discovered\n    }\n}","import NumberUtils from \"../../../utils/NumberUtils\";\n\nexport interface NokaiPos {\n    onBoard: boolean,\n    x: bigint,\n    y: bigint\n}\n\nexport function parseNokaiPos(data: any): NokaiPos {\n    return {\n        onBoard: data.onBoard,\n        x: NumberUtils.from(data.x),\n        y: NumberUtils.from(data.y)\n    }\n}","import Lina from \"../blockchain/Lina\";\nimport {parseTerritory, Territory} from \"../blockchain/definition/data/Territory\";\nimport {\n    BlackHoleContract,\n    ExtractorUpgraded,\n    NokaiMoved,\n    NokaiMovedSearch,\n    SlotConquered,\n    SlotConqueredSearch,\n    SlotDiscovered,\n    TerritoryExtracted\n} from \"../blockchain/definition/BlackHoleContract\";\nimport {Address, NokaiId} from \"../blockchain/definition/types\";\nimport {NokaiPos, parseNokaiPos} from \"../blockchain/definition/data/NokaiPos\";\nimport NumberUtils from \"../utils/NumberUtils\";\n\nexport default class BlackHole {\n\n    static async getMaxX(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.maxX()))\n    }\n\n    static async getMaxY(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.maxY()))\n    }\n\n    static async getTotalPos(contract: BlackHoleContract): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.totalPos()))\n    }\n\n    static async getTerritoryFor(contract: BlackHoleContract, choices: bigint[]): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getFor(choices))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n    static async getTerritoryForRange(contract: BlackHoleContract, from: bigint, to: bigint): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getForRange(from, to))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n\n    static async getTerritoryForBox(contract: BlackHoleContract, startPos: bigint, endPos: bigint, startLine: bigint, endLine: bigint): Promise<Territory[]> {\n        const data = await Lina.call(contract.methods.getForBox(startPos, endPos, startLine, endLine))\n\n        return data.map((result: any) => {\n            return parseTerritory(result)\n        })\n    }\n\n\n    static async getTerritory(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<Territory> {\n        return parseTerritory(await Lina.call(contract.methods.get(postX, posY)))\n    }\n\n    static async getExtractorCostAt(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.extractorCostAt(postX, posY)))\n    }\n\n    static async countTerritoryFor(contract: BlackHoleContract, user: Address): Promise<bigint> {\n        return NumberUtils.from(await Lina.call(contract.methods.territoryCount(user)))\n    }\n\n    static async getNokaiPos(contract: BlackHoleContract, nokaiId: NokaiId): Promise<NokaiPos> {\n        return parseNokaiPos(await Lina.call(contract.methods.nokaiPos(nokaiId)))\n    }\n\n    static async getNokaiAt(contract: BlackHoleContract, postX: bigint, posY: bigint): Promise<NokaiId> {\n        return NumberUtils.from(await Lina.call(contract.methods.nokaiAt(postX, posY)))\n    }\n\n    static subscribeSlotDiscovered(contract: BlackHoleContract, callback: (data: SlotDiscovered) => any) {\n        contract.events.SlotDiscovered().on('data', callback)\n    }\n\n    static subscribeSlotConquered(contract: BlackHoleContract, search: SlotConqueredSearch, callback: (data: SlotConquered) => any) {\n        contract.events.SlotConquered(search).on('data', callback)\n    }\n\n    static subscribeNokaiMoved(contract: BlackHoleContract, search: NokaiMovedSearch, callback: (data: NokaiMoved) => any) {\n        contract.events.NokaiMoved(search).on('data', callback)\n    }\n\n    static subscribeTerritoryExtracted(contract: BlackHoleContract, callback: (data: TerritoryExtracted) => any) {\n        contract.events.TerritoryExtracted().on('data', callback)\n    }\n\n    static subscribeExtractorUpgraded(contract: BlackHoleContract, callback: (data: ExtractorUpgraded) => any) {\n        contract.events.ExtractorUpgraded().on('data', callback)\n    }\n}","export class Point {\n    x: number\n    y: number\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}","import {Component} from \"react\";\nimport {Point} from \"./data/Point\";\nimport {Territory} from \"../../../blockchain/definition/data/Territory\";\n\ntype TerritoryProperties = {\n    x: bigint,\n    y: bigint,\n    posX: number,\n    posY: number,\n    size: number,\n    index: bigint,\n    territory: Territory,\n    onClick: ((index: bigint) => void) | null,\n    onMouseEnter: ((index: bigint) => void) | null,\n    onMouseLeave: ((index: bigint) => void) | null,\n    onMouseOver: ((index: bigint) => void) | null,\n}\n\ntype TerritoryState = {\n    loading: boolean,\n}\n\nexport default class BoardCase extends Component<TerritoryProperties, TerritoryState> {\n\n    static readonly spacing: number = 30\n    static readonly corners: Point[] = [\n        new Point(50, 0),\n        new Point(100, BoardCase.spacing),\n        new Point(100, 100 - BoardCase.spacing),\n        new Point(50, 100),\n        new Point(0, 100 - BoardCase.spacing),\n        new Point(0, BoardCase.spacing),\n    ]\n\n    constructor(props: TerritoryProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    onMouseEnter(event: any) {\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(this.props.index);\n        }\n    }\n\n    onMouseOver(event: any) {\n        if (this.props.onMouseOver) {\n            this.props.onMouseOver(this.props.index);\n        }\n    }\n\n    onMouseLeave(event: any) {\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(this.props.index);\n        }\n    }\n\n    onClick(event: any) {\n        if (this.props.onClick) {\n            this.props.onClick(this.props.index);\n        }\n    }\n\n    calculateCoordinates(): Point[] {\n        return BoardCase.corners.map(point => {\n           return new Point(\n               (point.x * this.props.size / 100) + (this.props.posX  * this.props.size),\n               (point.y * this.props.size / 100) + (this.props.posY * this.props.size) - (BoardCase.spacing * this.props.posY)\n        )\n        })\n    }\n\n    render() {\n        const points = this.calculateCoordinates().map( point => `${point.x},${point.y}`).join(\" \")\n        return <g className={'hexagon-group'}\n            onMouseEnter={e => this.onMouseEnter(e)}\n            onMouseOver={e => this.onMouseOver(e)}\n            onMouseLeave={e => this.onMouseLeave(e)}\n            onClick={e => this.onClick(e)}>\n            <g className=\"hexagon\">\n                <text x={this.props.posX * this.props.size + 24} y={(this.props.posY * this.props.size) - (BoardCase.spacing * this.props.posY) + 55} fill=\"black\">{Number(this.props.x)}_{Number(this.props.y)}</text>\n                <polygon points={points}/>\n            </g>\n        </g>\n    }\n}","export default class MathUtils {\n    static isEven(value: bigint): boolean {\n        return value % BigInt(2) === BigInt(0)\n    }\n    static isEven2(value: number): boolean {\n        return value % 2 === 0\n    }\n\n    static isNotEven(value: bigint): boolean {\n        return value % BigInt(2) !== BigInt(0)\n    }\n    static isNotEven2(value: number): boolean {\n        return value % 2 !== 0\n    }\n}","import {Component} from \"react\";\nimport BlackHole from \"../../../game/BlackHole\";\nimport {BlackHoleContract} from \"../../../blockchain/definition/BlackHoleContract\";\nimport BoardCase from \"./BoardCase\";\nimport {Territory} from \"../../../blockchain/definition/data/Territory\";\nimport MathUtils from \"../../../utils/MathUtils\";\n\nclass Canvas {\n    width: number = 1400\n    height: number = 800\n    caseLength: bigint = BigInt(100)\n}\n\nclass Camera {\n    x: bigint = BigInt(0)\n    y: bigint = BigInt(0)\n    totalX: bigint = BigInt(14)\n    totalY: bigint = BigInt(12)\n\n    setX(x: bigint): Camera {\n        this.x = x;\n        return this\n    }\n\n    setY(y: bigint): Camera {\n        this.y = y;\n        return this\n    }\n}\n\nclass Board {\n    casesX: bigint\n    casesY: bigint\n    total: bigint\n\n    constructor(x: bigint, y: bigint) {\n        this.casesX = x;\n        this.casesY = y;\n        this.total = x * y\n    }\n}\n\ntype CameraPos = {\n    key: number,\n    x: bigint,\n    y: bigint,\n    posX: number,\n    posY: number,\n    territory: Territory\n}\ntype GameBoardProperties = {\n    blackhole: BlackHoleContract\n}\n\ntype GameBoardState = {\n    loading: boolean,\n    canvas: Canvas,\n    camera: Camera,\n    board: Board,\n    positions: { [key: number]: Territory }\n}\n\nexport default class GameBoard extends Component<GameBoardProperties, GameBoardState> {\n\n    constructor(props: GameBoardProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n            canvas: new Canvas(),\n            camera: new Camera(),\n            board: new Board(BigInt(0), BigInt(0)),\n            positions: {}\n        }\n    }\n\n    async componentDidMount() {\n        Promise.all([\n            BlackHole.getMaxX(this.props.blackhole),\n            BlackHole.getMaxY(this.props.blackhole)\n        ]).then((values) => {\n            this.setState({board: new Board(values[0], values[1])})\n\n            this.loadDataForCamera(BigInt(0), this.state.camera.totalX + BigInt(1), BigInt(0), this.state.camera.totalY + BigInt(1)).then(() => {\n                this.setState({loading: false})\n            })\n        });\n\n        document.addEventListener(\"keydown\", this._handleKeyDown)\n        document.addEventListener(\"keyup\", this._handleKeyUp)\n    }\n\n    componentWillUnmount() {\n        document.addEventListener(\"keydown\", this._handleKeyDown)\n        document.removeEventListener(\"keyup\", this._handleKeyUp)\n    }\n\n    needQueryData(startPos: bigint, endPos: bigint, startLine: bigint, endLine: bigint): boolean {\n        for (let y = startLine; y < endLine; y++) {\n            for (let x = startPos; x < endPos; x++) {\n                const key: number = Number(y * this.state.board.casesX + x)\n                if (this.state.positions[key] === undefined) {\n                    return true;\n                }\n            }\n        }\n        return false\n    }\n\n    async loadDataForCamera(startPos: bigint, endPos: bigint, startLine: bigint, endLine: bigint) {\n        if (startPos > endPos) {\n            let tmp = startPos\n            startPos = endPos\n            endPos = tmp\n        }\n        if (startLine > endLine) {\n            let tmp = startLine\n            startLine = endLine\n            endLine = tmp\n        }\n        if (!this.needQueryData(startPos, endPos, startLine, endLine))\n            return\n        console.log(\"LOAD QUERY\")\n        BlackHole.getTerritoryForBox(this.props.blackhole, startPos, endPos, startLine, endLine).then(territories => {\n            let positions: { [key: number]: Territory } = {}\n            territories.forEach((territory, index) => {\n                const lineCount = endPos - startPos\n                const lineIndex: bigint = (BigInt(index) / lineCount) + startLine\n                const origin: bigint = (lineIndex * this.state.board.casesX) + startPos\n                const pos: bigint = origin + (BigInt(index) % lineCount)\n                positions[Number(pos)] = territory\n            })\n            // console.log(\"response:\", positions)\n            // console.log(\"BOARD:\", {...this.state.positions, ...positions})\n            this.setState({positions: {...this.state.positions, ...positions}})\n        })\n    }\n\n    moveCameraX(value: number) {\n        let max = this.state.board.casesX - this.state.camera.totalX\n        let posX: bigint = this.state.camera.x + BigInt(value)\n        if (posX < 0) {\n            posX = BigInt(0)\n        }\n        if (posX > max) {\n            posX = max\n        }\n        this.setState({camera: this.state.camera.setX(posX)})\n        if (posX + this.state.camera.totalX + BigInt(value) < max) {\n            this.loadDataForCamera(posX + this.state.camera.totalX, posX + this.state.camera.totalX + BigInt(value), this.state.camera.y, this.state.camera.y + this.state.camera.totalY)\n        }\n    }\n\n    moveCameraY(value: number) {\n        let max = this.state.board.casesX - this.state.camera.totalX\n        let posY: bigint = this.state.camera.y + BigInt(value)\n        if (posY < 0) {\n            posY = BigInt(0)\n        }\n        if (posY > max) {\n            posY = max\n        }\n        this.setState({camera: this.state.camera.setY(posY)})\n        if (posY + this.state.camera.totalY + BigInt(value) < max) {\n            this.loadDataForCamera(this.state.camera.x, this.state.camera.x + this.state.camera.totalX, posY + this.state.camera.totalY, posY + this.state.camera.totalY + BigInt(value))\n        }\n    }\n\n    _handleKeyUp = (event: { keyCode: number, preventDefault: any }) => {\n        switch (event.keyCode) {\n            case 40: // BOTTOM\n                event.preventDefault()\n                this.moveCameraY(1)\n                break\n            case 39: // RIGHT\n                event.preventDefault()\n                this.moveCameraX(1)\n                break\n            case 38: // TOP\n                event.preventDefault()\n                this.moveCameraY(-1)\n                break\n            case 37: // LEFT\n                event.preventDefault()\n                this.moveCameraX(-1)\n                break\n            default:\n                break\n        }\n    }\n\n    _handleKeyDown = (event: { keyCode: number, preventDefault: any }) => {\n        switch (event.keyCode) {\n            case 40: // BOTTOM\n                event.preventDefault()\n                break\n            case 39: // RIGHT\n                event.preventDefault()\n                break\n            case 38: // TOP\n                event.preventDefault()\n                break\n            case 37: // LEFT\n                event.preventDefault()\n                break\n            default:\n                break\n        }\n    }\n\n    private getCameraView(): CameraPos[] {\n        const result: CameraPos[] = []\n        const originX = this.state.camera.x === BigInt(0)\n        const originY = this.state.camera.y === BigInt(0)\n\n        const camX = originX ? this.state.camera.x : this.state.camera.x - BigInt(1)\n        const camY = originY ? this.state.camera.y : this.state.camera.y - BigInt(1)\n        const maxX = camX + this.state.camera.totalX + BigInt(1)\n        const maxY = camY + this.state.camera.totalY + BigInt(1)\n\n        for (let y = camY; y < maxY; y++) {\n            for (let x = camX; x < maxX; x++) {\n\n                const key: number = Number(y * this.state.board.casesX + x)\n\n                const posY: number = Number(y - camY) - (originY ? 0 : 1)\n                const posX: number = Number(x - camX) - (originX ? 0 : 1)\n\n                let adjustX: number = 0\n                if (MathUtils.isNotEven2(posY) || MathUtils.isNotEven(this.state.camera.y))\n                    adjustX = 0.5\n                if (MathUtils.isNotEven2(posY) && MathUtils.isNotEven(this.state.camera.y))\n                    adjustX = 0\n\n\n                result.push({key: key, territory: this.state.positions[key], posX: posX + adjustX, posY: posY, x: x, y: y,})\n            }\n        }\n        return result;\n    }\n\n    render() {\n        return <div>\n            <h4>Camera [{Number(this.state.camera.x)}, {Number(this.state.camera.y)}] __ Map [{Number(this.state.board.casesX)}, {Number(this.state.board.casesY)}]</h4>\n            <svg width={this.state.canvas.width} height={this.state.canvas.height} style={{border: \"1px solid black\", marginBottom: 20}}>\n\n                {this.getCameraView().map((data, index) => {\n                    return <BoardCase key={index} index={BigInt(data.key)} x={data.x} y={data.y} posX={data.posX} posY={data.posY} size={Number(this.state.canvas.caseLength)}\n                                      territory={data.territory}\n                                      onClick={null}\n                                      onMouseEnter={null}\n                                      onMouseLeave={null}\n                                      onMouseOver={null}/>\n                })\n                }\n            </svg>\n        </div>\n    }\n}","import BlackHole from './contracts/BlackHole.json';\nimport Web3Utils from \"./Web3Utils\";\nimport {BlackHoleContract} from \"./definition/BlackHoleContract\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n\n    static async instantiateBlackHole(): Promise<BlackHoleContract | null> {\n        console.log(\"load blackhole\")\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const BlackHoleData = BlackHole.networks[networkId]\n        console.log(\"BlackHoleData\", BlackHoleData)\n        if (BlackHoleData) {\n            return new window.web3.eth.Contract(BlackHole.abi, BlackHoleData.address)\n        } else {\n            window.alert('BlackHole contract not deployed to detected network.')\n            return null\n        }\n    }\n\n}","import {Component} from \"react\";\nimport GameNavbar from \"./game/GameNavbar\";\nimport GameLoading from \"./game/GameLoading\";\nimport Web3Utils from \"../../blockchain/Web3Utils\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport GameBoard from \"./game/GameBoard\";\nimport ContractLoader from \"../../blockchain/ContractLoader\";\nimport {BlackHoleContract} from \"../../blockchain/definition/BlackHoleContract\";\n\ninterface GameViewProperties extends RouteComponentProps {\n}\n\ntype GameViewState = {\n    blackhole: BlackHoleContract | null,\n    networkId: bigint | null,\n    account: string | null,\n    walletConnected: boolean,\n    loading: boolean\n}\n\nclass GameView extends Component<GameViewProperties, GameViewState> {\n    constructor(props: GameViewProperties) {\n        super(props)\n        this.state = {\n            blackhole: null,\n            networkId: null,\n            account: null,\n            walletConnected: false,\n            loading: true\n        }\n        this.setupState = this.setupState.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n        this.loadContracts = this.loadContracts.bind(this)\n        this.listenNetworkChanges = this.listenNetworkChanges.bind(this)\n        this.listenAccountChanges = this.listenAccountChanges.bind(this)\n        this.loginMetamask = this.loginMetamask.bind(this)\n        this.backToLobby = this.backToLobby.bind(this)\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.setupState()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async setupState() {\n        console.log(\"load data\")\n        await this.loadBlockchainData()\n        await this.listenNetworkChanges()\n        await this.listenAccountChanges()\n    }\n\n    async loadBlockchainData() {\n        const account = await Web3Utils.getDefaultAccount()\n        const networkId = await Web3Utils.getNetwork()\n\n        console.log(\"load contract\")\n        await this.loadContracts()\n\n        this.setState({account: account, loading: false, networkId: networkId, walletConnected: true})\n    }\n\n    async loadContracts() {\n        const blackhole = await ContractLoader.instantiateBlackHole()\n\n        this.setState({\n            blackhole: blackhole\n        })\n    }\n\n    async listenNetworkChanges() {\n        console.log(\"##listen network change\")\n        Web3Utils.getEth().on('chainChanged', (chainId: bigint) => {\n            console.log(\"network changed\", chainId)\n            this.setState({networkId: chainId})\n        })\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            if (accounts.length === 0) {\n                this.setState({account: null, walletConnected: false})\n            } else {\n                this.setState({account: accounts[0]})\n            }\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            console.log(\"trying load data\")\n            await this.setupState()\n        }\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        let content\n\n        if (this.state.loading) {\n            content = <GameLoading/>\n        } else if (!this.state.walletConnected) {\n            content = <div>\n                <Modal show={true} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered animation={false}>\n                    <Modal.Header closeButton={false}><Modal.Title>Metamask</Modal.Title></Modal.Header>\n                    <Modal.Body>\n                        A connection to your Metamask wallet is required in order to play in BlackHole. We will use this access to retrieve your NFT and tokens associated to the\n                        linked account.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.backToLobby}>\n                            Quit Game\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.loginMetamask}>Login Metamask</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        } else if (this.state.networkId != null && this.state.account != null && this.state.blackhole != null) {\n            content = <div>\n                <GameNavbar networkId={this.state.networkId} account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-9\">\n                            <GameBoard blackhole={this.state.blackhole}/>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <h1>Menu</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h2>some other UIs</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        } else if (this.state.blackhole == null) {\n            content = <div>\n                <h3>Error: The game is not deployed on your selected network ({this.state.networkId}). Please select a supported network on your Metamask.</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Go Back\n                </Button>\n            </div>\n        } else {\n            content = <div>\n                <h3>Error: unexpected error</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Quit Game\n                </Button>\n            </div>\n        }\n\n        return <div className=\"container-fluid mt-5\">\n            {content}\n        </div>\n    }\n}\n\nexport default withRouter(GameView);","import {Component} from \"react\";\n\ntype HomeLoadingProperties = {}\n\ntype HomeLoadingState = {}\n\nexport default class HomeLoading extends Component<HomeLoadingProperties, HomeLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\n\ntype NavbarProperties = {}\n\ntype NavbarState = {\n    walletConnected: boolean,\n    account: string | null,\n    loading: boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            walletConnected: false,\n            account: null,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.loadData()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async loadData() {\n        await this.loadAccountsData()\n        await this.listenAccountChanges()\n    }\n\n    async loadAccountsData() {\n        const account = await Web3Utils.getDefaultAccount()\n        this.setState({account: account, loading: false, walletConnected: true})\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            this.setState({account: accounts[0]})\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            await this.loadData()\n        }\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n            </a>\n\n            {this.state.walletConnected && this.state.account != null && <span style={{color: 'white'}}>{this.state.account}</span>}\n\n            {!this.state.loading && !this.state.walletConnected && <button onClick={this.loginMetamask}>Connect Metamask</button>}\n        </nav>\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface TutorialViewProperties extends RouteComponentProps {\n}\n\ntype TutorialViewState = {\n    loading: boolean\n}\n\nclass TutorialView extends Component<TutorialViewProperties, TutorialViewState> {\n    constructor(props: TutorialViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(TutorialView);","import {Component} from \"react\";\nimport HomeLoading from \"./home/HomeLoading\";\nimport {Route, RouteComponentProps, Switch, withRouter} from \"react-router-dom\";\nimport Navbar from \"./home/Navbar\";\nimport TutorialView from \"./home/TutorialView\";\nimport {Button} from \"react-bootstrap\";\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\n\ntype HomeViewState = {\n    loading: boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.launchGame = this.launchGame.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    launchGame = () => {\n        this.props.history.push('/play')\n    }\n\n    render() {\n        let current = <div>\n            <h2>Hello world!</h2>\n            <Button variant=\"primary\" onClick={this.launchGame}>\n                Launch Game\n            </Button>\n        </div>\n\n        if (this.state.loading) {\n            return <HomeLoading/>\n        } else {\n            return <div>\n                <Navbar/>\n                <div className=\"container-fluid mt-5\">\n                    <Switch>\n                        <Route path={\"/tutorial\"}>\n                            <TutorialView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            {current}\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface MarketViewProperties extends RouteComponentProps {\n}\n\ntype MarketViewState = {\n    loading: boolean\n}\n\nclass MarketView extends Component<MarketViewProperties, MarketViewState> {\n    constructor(props: MarketViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(MarketView);","import './App.scss';\nimport {Component} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport GameView from \"./web/views/GameView\";\nimport HomeView from \"./web/views/HomeView\";\nimport MarketView from \"./web/views/MarketView\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faGithub, faLinkedinIn);\n\nconst routerBaseName = process.env.PUBLIC_URL;\n\ninterface AppProperties {\n}\n\ninterface AppState {\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n\n    render() {\n        return <div className=\"App\">\n            <main role=\"main\">\n                <BrowserRouter basename={routerBaseName}>\n                    <Switch>\n                        <Route path={\"/play\"}>\n                            <GameView/>\n                        </Route>\n                        <Route path={\"/market\"}>\n                            <MarketView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            <HomeView/>\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </main>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}