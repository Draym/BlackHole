{"version":3,"sources":["web/views/game/GameNavbar.tsx","web/views/game/GameLoading.tsx","blockchain/Web3Utils.tsx","web/views/GameView.tsx","web/views/home/HomeLoading.tsx","web/views/home/Navbar.tsx","web/views/home/TutorialView.tsx","web/views/HomeView.tsx","web/views/MarketView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["GameNavbar","props","state","networkId","account","loading","a","this","setState","className","href","target","rel","icon","style","color","Component","GameLoading","Web3Utils","window","ethereum","request","method","accounts","web3","Web3","defaultAccount","on","alert","detectEthereumProvider","provider","console","log","result","length","eth","net","getId","e","value","utils","fromAscii","GameView","backToLobby","history","push","walletConnected","loadData","bind","loadAccountsData","listenNetworkChanges","listenAccountChanges","loginMetamask","isMetamaskConnected","loadMetamask","getDefaultAccount","getNetwork","getEth","chainId","Button","variant","onClick","Modal","show","backdrop","keyboard","centered","animation","Header","closeButton","Title","Body","Footer","withRouter","HomeLoading","Navbar","TutorialView","HomeView","launchGame","current","path","MarketView","library","add","faGithub","faLinkedinIn","App","role","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b664668.chunk.js","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\n\ntype GameNavbarProperties = {\n    networkId: number,\n    account: string,\n}\n\ntype GameNavbarState = {\n    networkId: number,\n    account: string,\n    loading: boolean\n}\n\nexport default class GameNavbar extends Component<GameNavbarProperties, GameNavbarState> {\n    constructor(props: GameNavbarProperties) {\n        super(props)\n        this.state = {\n            networkId: props.networkId,\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n            this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> BlackHole Game</span>\n            </a>\n            <span style={{color: 'white'}}>network: {this.state.networkId}</span>\n            <span className=\"me-3\" style={{color: 'white'}}>account: {this.state.account}</span>\n        </nav>\n    }\n}","import {Component} from \"react\";\n\ntype GameLoadingProperties = {}\n\ntype GameLoadingState = {}\n\nexport default class GameLoading extends Component<GameLoadingProperties, GameLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n            window.web3 = new Web3(window.ethereum)\n            window.ethereum.defaultAccount = accounts[0]\n            window.ethereum.on('accountsChanged', (accounts: string[]) => {\n                window.ethereum.defaultAccount = accounts[0]\n            })\n            return true\n        }\n            // else if (window.web3) {\n            //     window.web3 = new Web3(window.web3.currentProvider)\n            //     return true\n        // }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n            return false\n        }\n    }\n\n    static async isMetamaskInstalled() {\n        const provider = await detectEthereumProvider();\n        return !!provider;\n    }\n\n    static async isMetamaskConnected() {\n        const provider = await detectEthereumProvider()\n\n        if (provider) {\n            console.log('Metamask successfully detected!');\n            const result = await window.ethereum.request({method: 'eth_accounts'})\n            return result.length > 0\n        } else {\n            console.log('Metamask is not installed!');\n            return false\n        }\n    }\n\n    // @ts-ignore\n    static getEth(): EthereumProvider | null {\n        return window.ethereum\n    }\n\n    static async getNetwork(): Promise<number> {\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts(): Promise<string[]> {\n        return await window.ethereum.request({method: 'eth_accounts'})\n    }\n\n    static getDefaultAccount(): string | null {\n        try {\n            return window.ethereum.defaultAccount\n        } catch (e) {\n            return null\n        }\n    }\n\n    static encode(value: string): string {\n        return window.web3.utils.fromAscii(value)\n    }\n\n    static nullAddress() {\n        return '0x0000000000000000000000000000000000000000';\n    }\n\n    static nullBytes() {\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n    }\n}","import {Component} from \"react\";\nimport GameNavbar from \"./game/GameNavbar\";\nimport GameLoading from \"./game/GameLoading\";\nimport Web3Utils from \"../../blockchain/Web3Utils\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface GameViewProperties extends RouteComponentProps {\n}\n\ntype GameViewState = {\n    networkId: number | null,\n    account: string | null,\n    walletConnected: boolean,\n    loading: boolean\n}\n\nclass GameView extends Component<GameViewProperties, GameViewState> {\n    constructor(props: GameViewProperties) {\n        super(props)\n        this.state = {\n            networkId: null,\n            account: null,\n            walletConnected: false,\n            loading: true\n        }\n        this.loadData = this.loadData.bind(this);\n        this.loadAccountsData = this.loadAccountsData.bind(this);\n        this.listenNetworkChanges = this.listenNetworkChanges.bind(this);\n        this.listenAccountChanges = this.listenAccountChanges.bind(this);\n        this.loginMetamask = this.loginMetamask.bind(this);\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.loadData()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async loadData() {\n        console.log(\"load data\")\n        await this.loadAccountsData()\n        await this.listenNetworkChanges()\n        await this.listenAccountChanges()\n    }\n\n    async loadAccountsData() {\n        const account = await Web3Utils.getDefaultAccount()\n        const networkId = await Web3Utils.getNetwork()\n        this.setState({account: account, loading: false, networkId: networkId, walletConnected: true})\n    }\n\n    async listenNetworkChanges() {\n        console.log(\"##listen network change\")\n        Web3Utils.getEth().on('chainChanged', (chainId: number) => {\n            console.log(\"network changed\", chainId)\n            this.setState({networkId: chainId})\n        })\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            if (accounts.length === 0) {\n                this.setState({account: null, walletConnected: false})\n            } else {\n                this.setState({account: accounts[0]})\n            }\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            console.log(\"trying load data\")\n            await this.loadData()\n        }\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <GameLoading/>\n        } else if (!this.state.walletConnected) {\n            return <div>\n                <Modal show={true} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered animation={false}>\n                    <Modal.Header closeButton={false}><Modal.Title>Metamask</Modal.Title></Modal.Header>\n                    <Modal.Body>\n                        A connection to your Metamask wallet is required in order to play in BlackHole. We will use this access to retrieve your NFT and tokens associated to the\n                        linked account.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.backToLobby}>\n                            Quit Game\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.loginMetamask}>Login Metamask</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        } else if (this.state.networkId != null && this.state.account != null) {\n            return <div>\n                <GameNavbar networkId={this.state.networkId} account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <span>hello game</span>\n                </div>\n            </div>\n        } else {\n            return <div>\n                Error: Go back to home\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Quit Game\n                </Button>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(GameView);","import {Component} from \"react\";\n\ntype HomeLoadingProperties = {}\n\ntype HomeLoadingState = {}\n\nexport default class HomeLoading extends Component<HomeLoadingProperties, HomeLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\n\ntype NavbarProperties = {}\n\ntype NavbarState = {\n    walletConnected: boolean,\n    account: string | null,\n    loading: boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            walletConnected: false,\n            account: null,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.loadData()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async loadData() {\n        await this.loadAccountsData()\n        await this.listenAccountChanges()\n    }\n\n    async loadAccountsData() {\n        const account = await Web3Utils.getDefaultAccount()\n        this.setState({account: account, loading: false, walletConnected: true})\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            this.setState({account: accounts[0]})\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            await this.loadData()\n        }\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n            </a>\n\n            {this.state.walletConnected && this.state.account != null && <span style={{color: 'white'}}>{this.state.account}</span>}\n\n            {!this.state.loading && !this.state.walletConnected && <button onClick={this.loginMetamask}>Connect Metamask</button>}\n        </nav>\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface TutorialViewProperties extends RouteComponentProps {\n}\n\ntype TutorialViewState = {\n    loading: boolean\n}\n\nclass TutorialView extends Component<TutorialViewProperties, TutorialViewState> {\n    constructor(props: TutorialViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(TutorialView);","import {Component} from \"react\";\nimport HomeLoading from \"./home/HomeLoading\";\nimport {Route, RouteComponentProps, Switch, withRouter} from \"react-router-dom\";\nimport Navbar from \"./home/Navbar\";\nimport TutorialView from \"./home/TutorialView\";\nimport {Button} from \"react-bootstrap\";\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\n\ntype HomeViewState = {\n    loading: boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.launchGame = this.launchGame.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    launchGame = () => {\n        this.props.history.push('/play')\n    }\n\n    render() {\n        let current = <div>\n            <h2>Hello world!</h2>\n            <Button variant=\"primary\" onClick={this.launchGame}>\n                Launch Game\n            </Button>\n        </div>\n\n        if (this.state.loading) {\n            return <HomeLoading/>\n        } else {\n            return <div>\n                <Navbar/>\n                <div className=\"container-fluid mt-5\">\n                    <Switch>\n                        <Route path={\"/tutorial\"}>\n                            <TutorialView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            {current}\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface MarketViewProperties extends RouteComponentProps {\n}\n\ntype MarketViewState = {\n    loading: boolean\n}\n\nclass MarketView extends Component<MarketViewProperties, MarketViewState> {\n    constructor(props: MarketViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(MarketView);","import './App.scss';\nimport {Component} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport GameView from \"./web/views/GameView\";\nimport HomeView from \"./web/views/HomeView\";\nimport MarketView from \"./web/views/MarketView\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faGithub, faLinkedinIn);\n\nconst routerBaseName = process.env.PUBLIC_URL;\n\ninterface AppProperties {\n}\n\ninterface AppState {\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n\n    render() {\n        return <div className=\"App\">\n            <main role=\"main\">\n                <BrowserRouter basename={routerBaseName}>\n                    <Switch>\n                        <Route path={\"/play\"}>\n                            <GameView/>\n                        </Route>\n                        <Route path={\"/market\"}>\n                            <MarketView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            <HomeView/>\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </main>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}