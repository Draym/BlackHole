{"version":3,"sources":["web/views/game/GameNavbar.tsx","web/views/game/GameLoading.tsx","blockchain/Web3Utils.tsx","blockchain/Lina.tsx","game/BlackHole.tsx","web/views/game/GameBoard.tsx","blockchain/ContractLoader.tsx","web/views/GameView.tsx","web/views/home/HomeLoading.tsx","web/views/home/Navbar.tsx","web/views/home/TutorialView.tsx","web/views/HomeView.tsx","web/views/MarketView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["GameNavbar","props","state","networkId","account","loading","a","this","setState","className","href","target","rel","icon","style","color","Component","GameLoading","Web3Utils","window","ethereum","request","method","accounts","web3","Web3","defaultAccount","on","alert","detectEthereumProvider","provider","console","log","result","length","eth","net","getId","e","value","utils","fromAscii","Lina","data","call","from","send","getDefaultAccount","BlackHole","contract","to","methods","getBlackHole","postX","posY","get","extractorCostAt","user","territoryCount","nokaiId","nokaiPos","nokaiAt","callback","events","SlotDiscovered","search","SlotConquered","NokaiMoved","TerritoryExtracted","ExtractorUpgraded","GameBoard","_handleKeyDown","event","keyCode","preventDefault","moveCameraY","moveCameraX","cameraX","cameraY","minX","minY","maxX","maxY","getBoard","blackhole","then","territories","document","addEventListener","removeEventListener","posX","width","height","viewBox","border","marginBottom","cx","cy","r","fill","rx","ry","ContractLoader","getNetwork","BlackHoleData","networks","Contract","abi","address","GameView","backToLobby","history","push","walletConnected","setupState","bind","loadBlockchainData","loadContracts","listenNetworkChanges","listenAccountChanges","loginMetamask","isMetamaskConnected","loadMetamask","instantiateBlackHole","getEth","chainId","content","Button","variant","onClick","Modal","show","backdrop","keyboard","centered","animation","Header","closeButton","Title","Body","Footer","withRouter","HomeLoading","Navbar","loadData","loadAccountsData","TutorialView","HomeView","launchGame","current","path","MarketView","library","add","faGithub","faLinkedinIn","App","role","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06662b80.chunk.js","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\n\ntype GameNavbarProperties = {\n    networkId: number,\n    account: string,\n}\n\ntype GameNavbarState = {\n    networkId: number,\n    account: string,\n    loading: boolean\n}\n\nexport default class GameNavbar extends Component<GameNavbarProperties, GameNavbarState> {\n    constructor(props: GameNavbarProperties) {\n        super(props)\n        this.state = {\n            networkId: props.networkId,\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> BlackHole Game</span>\n            </a>\n            <span style={{color: 'white'}}>network: {this.state.networkId}</span>\n            <span className=\"me-3\" style={{color: 'white'}}>account: {this.state.account}</span>\n        </nav>\n    }\n}","import {Component} from \"react\";\n\ntype GameLoadingProperties = {}\n\ntype GameLoadingState = {}\n\nexport default class GameLoading extends Component<GameLoadingProperties, GameLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n            window.web3 = new Web3(window.ethereum)\n            window.ethereum.defaultAccount = accounts[0]\n            window.ethereum.on('accountsChanged', (accounts: string[]) => {\n                window.ethereum.defaultAccount = accounts[0]\n            })\n            return true\n        }\n        // else if (window.web3) {\n        //     window.web3 = new Web3(window.web3.currentProvider)\n        //     return true\n        // }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n            return false\n        }\n    }\n\n    static async isMetamaskInstalled() {\n        const provider = await detectEthereumProvider();\n        return !!provider;\n    }\n\n    static async isMetamaskConnected() {\n        const provider = await detectEthereumProvider()\n\n        if (provider) {\n            console.log('Metamask successfully detected!');\n            const result = await window.ethereum.request({method: 'eth_accounts'})\n            return result.length > 0\n        } else {\n            console.log('Metamask is not installed!');\n            return false\n        }\n    }\n\n    // @ts-ignore\n    static getEth(): EthereumProvider | null {\n        return window.ethereum\n    }\n\n    static async getNetwork(): Promise<number> {\n        console.log(\"get network\")\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts(): Promise<string[]> {\n        return await window.ethereum.request({method: 'eth_accounts'})\n    }\n\n    static getDefaultAccount(): string | null {\n        try {\n            return window.ethereum.defaultAccount\n        } catch (e) {\n            return null\n        }\n    }\n\n    static encode(value: string): string {\n        return window.web3.utils.fromAscii(value)\n    }\n\n    static nullAddress() {\n        return '0x0000000000000000000000000000000000000000';\n    }\n\n    static nullBytes() {\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n    }\n}","import Web3Utils from \"./Web3Utils\";\n\nexport default class Lina {\n\n    static async call(method: any, data: object = {}) {\n        return method.call({from: Lina.account(), ...data})\n    }\n\n    static async send(method: any, data: object = {}) {\n        return method.send({from: Lina.account(), ...data})\n    }\n\n    static account() {\n        return Web3Utils.getDefaultAccount()\n    }\n}","import Lina from \"../blockchain/Lina\";\nimport {Territory} from \"../blockchain/definition/data/Territory\";\nimport {\n    BlackHoleContract,\n    ExtractorUpgraded,\n    NokaiMoved,\n    NokaiMovedSearch,\n    SlotConquered,\n    SlotConqueredSearch,\n    SlotDiscovered,\n    TerritoryExtracted\n} from \"../blockchain/definition/BlackHoleContract\";\nimport {Address, NokaiId} from \"../blockchain/definition/types\";\nimport {Position} from \"../blockchain/definition/data/Position\";\n\nexport default class BlackHole {\n\n    static async getBoard(contract: BlackHoleContract, from: number, to: number): Promise<Territory[]> {\n        console.log(\"methods: \", contract.methods)\n        return await Lina.call(contract.methods.getBlackHole(from, to))\n    }\n\n    static async getTerritory(contract: BlackHoleContract, postX: number, posY: number): Promise<Territory> {\n        return await Lina.call(contract.methods.get(postX, posY))\n    }\n\n    static async getExtractorCostAt(contract: BlackHoleContract, postX: number, posY: number): Promise<number> {\n        return await Lina.call(contract.methods.extractorCostAt(postX, posY))\n    }\n\n    static async countTerritoryFor(contract: BlackHoleContract, user: Address): Promise<number> {\n        return await Lina.call(contract.methods.territoryCount(user))\n    }\n\n    static async getNokaiPos(contract: BlackHoleContract, nokaiId: NokaiId): Promise<Position> {\n        return await Lina.call(contract.methods.nokaiPos(nokaiId))\n    }\n\n    static async getNokaiAt(contract: BlackHoleContract, postX: number, posY: number): Promise<NokaiId> {\n        return await Lina.call(contract.methods.nokaiAt(postX, posY))\n    }\n\n    static subscribeSlotDiscovered(contract: BlackHoleContract, callback: (data: SlotDiscovered) => any) {\n        contract.events.SlotDiscovered().on('data', callback)\n    }\n    static subscribeSlotConquered(contract: BlackHoleContract, search: SlotConqueredSearch, callback: (data: SlotConquered) => any) {\n        contract.events.SlotConquered(search).on('data', callback)\n    }\n    static subscribeNokaiMoved(contract: BlackHoleContract, search: NokaiMovedSearch, callback: (data: NokaiMoved) => any) {\n        contract.events.NokaiMoved(search).on('data', callback)\n    }\n    static subscribeTerritoryExtracted(contract: BlackHoleContract, callback: (data: TerritoryExtracted) => any) {\n        contract.events.TerritoryExtracted().on('data', callback)\n    }\n    static subscribeExtractorUpgraded(contract: BlackHoleContract, callback: (data: ExtractorUpgraded) => any) {\n        contract.events.ExtractorUpgraded().on('data', callback)\n    }\n}","import {Component} from \"react\";\nimport BlackHole from \"../../../game/BlackHole\";\nimport {BlackHoleContract} from \"../../../blockchain/definition/BlackHoleContract\";\n\ntype GameBoardProperties = {\n    blackhole: BlackHoleContract\n}\n\ntype GameBoardState = {\n    loading: boolean,\n    cameraX: number,\n    cameraY: number,\n    minX: number,\n    minY: number\n    maxX: number,\n    maxY: number\n}\n\nexport default class GameBoard extends Component<GameBoardProperties, GameBoardState> {\n\n    constructor(props: GameBoardProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n            cameraX: -50,\n            cameraY: -50,\n            minX: -50,\n            minY: -50,\n            maxX: 500,\n            maxY: 500\n        }\n    }\n\n    async componentDidMount() {\n        // BlackHole.getTerritory(this.props.blackhole, 0, 0).then(territory => {\n        //     console.log(\"0,0: \", territory)\n        // })\n        // BlackHole.getTerritory(this.props.blackhole, 50, 50).then(territory => {\n        //     console.log(\"50,50: \", territory)\n        // })\n        BlackHole.getBoard(this.props.blackhole, 0, 10).then(territories => {\n            console.log(\"0 -> 10: \", territories)\n        })\n        this.setState({loading: false})\n        document.addEventListener(\"keydown\", this._handleKeyDown)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this._handleKeyDown)\n    }\n\n    moveCameraX(value: number) {\n        let posX = this.state.cameraX + value\n        if (posX < this.state.minX) {\n            posX = this.state.minX\n        }\n        if (posX > this.state.maxX) {\n            posX = this.state.maxX\n        }\n        this.setState({cameraX: posX})\n    }\n\n    moveCameraY(value: number) {\n        let posY = this.state.cameraY + value\n        if (posY < this.state.minY) {\n            posY = this.state.minY\n        }\n        if (posY > this.state.maxY) {\n            posY = this.state.maxY\n        }\n        this.setState({cameraY: posY})\n    }\n\n    _handleKeyDown = (event: { keyCode: number, preventDefault: any }) => {\n        switch (event.keyCode) {\n            case 40: // BOTTOM\n                event.preventDefault()\n                this.moveCameraY(100)\n                break\n            case 39: // RIGHT\n                event.preventDefault()\n                this.moveCameraX(100)\n                break\n            case 38: // TOP\n                event.preventDefault()\n                this.moveCameraY(-100)\n                break\n            case 37: // LEFT\n                event.preventDefault()\n                this.moveCameraX(-100)\n                break\n            default:\n                break\n        }\n    }\n\n    render() {\n        console.log(\"camera: \", this.state.cameraX, this.state.cameraY)\n        return <svg width=\"1400\" height=\"800\" viewBox={`${this.state.cameraX} ${this.state.cameraY} 1400 800`} style={{border: \"1px solid black\", marginBottom: 20}}>\n            <circle cx=\"-300\" cy=\"0\" r=\"2\" fill=\"purple\"/>\n            <circle cx=\"400\" cy=\"0\" r=\"2\" fill=\"purple\"/>\n            <circle cx=\"1200\" cy=\"0\" r=\"2\" fill=\"purple\"/>\n            <circle cx=\"2500\" cy=\"0\" r=\"2\" fill=\"green\"/>\n            <circle cx=\"3900\" cy=\"0\" r=\"2\" fill=\"green\"/>\n\n            <ellipse cx=\"2000\" cy=\"200\" rx=\"50\" ry=\"50\" fill=\"pink\"></ellipse>\n            <ellipse cx=\"2500\" cy=\"200\" rx=\"50\" ry=\"50\" fill=\"pink\"></ellipse>\n            <ellipse cx=\"3900\" cy=\"200\" rx=\"50\" ry=\"50\" fill=\"pink\"></ellipse>\n\n            <ellipse cx=\"0\" cy=\"0\" rx=\"50\" ry=\"50\"></ellipse>\n            <ellipse cx=\"0\" cy=\"100\" rx=\"50\" ry=\"50\" fill=\"blue\"></ellipse>\n            <ellipse cx=\"0\" cy=\"200\" rx=\"50\" ry=\"50\" fill=\"blue\"></ellipse>\n            <ellipse cx=\"0\" cy=\"300\" rx=\"50\" ry=\"50\" fill=\"blue\"></ellipse>\n\n            <ellipse cx=\"100\" cy=\"100\" rx=\"50\" ry=\"50\"></ellipse>\n            <ellipse cx=\"200\" cy=\"200\" rx=\"50\" ry=\"50\"></ellipse>\n            <ellipse cx=\"300\" cy=\"300\" rx=\"50\" ry=\"50\"></ellipse>\n            <ellipse cx=\"400\" cy=\"400\" rx=\"50\" ry=\"50\"></ellipse>\n\n            <circle cx=\"0\" cy=\"0\" r=\"2\" fill=\"red\"/>\n            <circle cx=\"50\" cy=\"50\" r=\"2\" fill=\"red\"/>\n            <circle cx=\"100\" cy=\"100\" r=\"2\" fill=\"red\"/>\n            <circle cx=\"200\" cy=\"200\" r=\"2\" fill=\"red\"/>\n            <circle cx=\"300\" cy=\"300\" r=\"2\" fill=\"red\"/>\n        </svg>\n    }\n}","import BlackHole from './contracts/BlackHole.json';\nimport Web3Utils from \"./Web3Utils\";\nimport {BlackHoleContract} from \"./definition/BlackHoleContract\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n\n    static async instantiateBlackHole(): Promise<BlackHoleContract | null> {\n        console.log(\"load blackhole\")\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const BlackHoleData = BlackHole.networks[networkId]\n        console.log(\"BlackHoleData\", BlackHoleData)\n        if (BlackHoleData) {\n            return new window.web3.eth.Contract(BlackHole.abi, BlackHoleData.address)\n        } else {\n            window.alert('BlackHole contract not deployed to detected network.')\n            return null\n        }\n    }\n\n}","import {Component} from \"react\";\nimport GameNavbar from \"./game/GameNavbar\";\nimport GameLoading from \"./game/GameLoading\";\nimport Web3Utils from \"../../blockchain/Web3Utils\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport GameBoard from \"./game/GameBoard\";\nimport ContractLoader from \"../../blockchain/ContractLoader\";\nimport {BlackHoleContract} from \"../../blockchain/definition/BlackHoleContract\";\n\ninterface GameViewProperties extends RouteComponentProps {\n}\n\ntype GameViewState = {\n    blackhole: BlackHoleContract | null,\n    networkId: number | null,\n    account: string | null,\n    walletConnected: boolean,\n    loading: boolean\n}\n\nclass GameView extends Component<GameViewProperties, GameViewState> {\n    constructor(props: GameViewProperties) {\n        super(props)\n        this.state = {\n            blackhole: null,\n            networkId: null,\n            account: null,\n            walletConnected: false,\n            loading: true\n        }\n        this.setupState = this.setupState.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n        this.loadContracts = this.loadContracts.bind(this)\n        this.listenNetworkChanges = this.listenNetworkChanges.bind(this)\n        this.listenAccountChanges = this.listenAccountChanges.bind(this)\n        this.loginMetamask = this.loginMetamask.bind(this)\n        this.backToLobby = this.backToLobby.bind(this)\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.setupState()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async setupState() {\n        console.log(\"load data\")\n        await this.loadBlockchainData()\n        await this.listenNetworkChanges()\n        await this.listenAccountChanges()\n    }\n\n    async loadBlockchainData() {\n        const account = await Web3Utils.getDefaultAccount()\n        const networkId = await Web3Utils.getNetwork()\n\n        console.log(\"load contract\")\n        await this.loadContracts()\n\n        this.setState({account: account, loading: false, networkId: networkId, walletConnected: true})\n    }\n\n    async loadContracts() {\n        const blackhole = await ContractLoader.instantiateBlackHole()\n\n        this.setState({\n            blackhole: blackhole\n        })\n    }\n\n    async listenNetworkChanges() {\n        console.log(\"##listen network change\")\n        Web3Utils.getEth().on('chainChanged', (chainId: number) => {\n            console.log(\"network changed\", chainId)\n            this.setState({networkId: chainId})\n        })\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            if (accounts.length === 0) {\n                this.setState({account: null, walletConnected: false})\n            } else {\n                this.setState({account: accounts[0]})\n            }\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            console.log(\"trying load data\")\n            await this.setupState()\n        }\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        let content\n\n        if (this.state.loading) {\n            content = <GameLoading/>\n        } else if (!this.state.walletConnected) {\n            content = <div>\n                <Modal show={true} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered animation={false}>\n                    <Modal.Header closeButton={false}><Modal.Title>Metamask</Modal.Title></Modal.Header>\n                    <Modal.Body>\n                        A connection to your Metamask wallet is required in order to play in BlackHole. We will use this access to retrieve your NFT and tokens associated to the\n                        linked account.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.backToLobby}>\n                            Quit Game\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.loginMetamask}>Login Metamask</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        } else if (this.state.networkId != null && this.state.account != null && this.state.blackhole != null) {\n            content = <div>\n                <GameNavbar networkId={this.state.networkId} account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-9\">\n                            <GameBoard blackhole={this.state.blackhole}/>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <h1>Menu</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h2>some other UIs</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        } else if (this.state.blackhole == null) {\n            content = <div>\n                <h3>Error: The game is not deployed on your selected network ({this.state.networkId}). Please select a supported network on your Metamask.</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Go Back\n                </Button>\n            </div>\n        } else {\n            content = <div>\n                <h3>Error: unexpected error</h3>\n                <Button variant=\"secondary\" onClick={this.backToLobby}>\n                    Quit Game\n                </Button>\n            </div>\n        }\n\n        return <div className=\"container-fluid mt-5\">\n            {content}\n        </div>\n    }\n}\n\nexport default withRouter(GameView);","import {Component} from \"react\";\n\ntype HomeLoadingProperties = {}\n\ntype HomeLoadingState = {}\n\nexport default class HomeLoading extends Component<HomeLoadingProperties, HomeLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Component} from \"react\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\n\ntype NavbarProperties = {}\n\ntype NavbarState = {\n    walletConnected: boolean,\n    account: string | null,\n    loading: boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            walletConnected: false,\n            account: null,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        const walletConnected = await Web3Utils.isMetamaskConnected()\n        if (walletConnected) {\n            await Web3Utils.loadMetamask()\n            await this.loadData()\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    async loadData() {\n        await this.loadAccountsData()\n        await this.listenAccountChanges()\n    }\n\n    async loadAccountsData() {\n        const account = await Web3Utils.getDefaultAccount()\n        this.setState({account: account, loading: false, walletConnected: true})\n    }\n\n    async listenAccountChanges() {\n        console.log(\"##listen account change\")\n        Web3Utils.getEth().on('accountsChanged', (accounts: string[]) => {\n            console.log(\"account changed\", accounts[0])\n            this.setState({account: accounts[0]})\n        })\n    }\n\n    async loginMetamask() {\n        let metamaskLoaded = await Web3Utils.loadMetamask()\n        if (metamaskLoaded) {\n            await this.loadData()\n        }\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <a\n                className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                href=\"https://github.com/Draym/blackhole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n            </a>\n\n            {this.state.walletConnected && this.state.account != null && <span style={{color: 'white'}}>{this.state.account}</span>}\n\n            {!this.state.loading && !this.state.walletConnected && <button onClick={this.loginMetamask}>Connect Metamask</button>}\n        </nav>\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface TutorialViewProperties extends RouteComponentProps {\n}\n\ntype TutorialViewState = {\n    loading: boolean\n}\n\nclass TutorialView extends Component<TutorialViewProperties, TutorialViewState> {\n    constructor(props: TutorialViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(TutorialView);","import {Component} from \"react\";\nimport HomeLoading from \"./home/HomeLoading\";\nimport {Route, RouteComponentProps, Switch, withRouter} from \"react-router-dom\";\nimport Navbar from \"./home/Navbar\";\nimport TutorialView from \"./home/TutorialView\";\nimport {Button} from \"react-bootstrap\";\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\n\ntype HomeViewState = {\n    loading: boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.launchGame = this.launchGame.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    launchGame = () => {\n        this.props.history.push('/play')\n    }\n\n    render() {\n        let current = <div>\n            <h2>Hello world!</h2>\n            <Button variant=\"primary\" onClick={this.launchGame}>\n                Launch Game\n            </Button>\n        </div>\n\n        if (this.state.loading) {\n            return <HomeLoading/>\n        } else {\n            return <div>\n                <Navbar/>\n                <div className=\"container-fluid mt-5\">\n                    <Switch>\n                        <Route path={\"/tutorial\"}>\n                            <TutorialView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            {current}\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ninterface MarketViewProperties extends RouteComponentProps {\n}\n\ntype MarketViewState = {\n    loading: boolean\n}\n\nclass MarketView extends Component<MarketViewProperties, MarketViewState> {\n    constructor(props: MarketViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n        this.backToLobby = this.backToLobby.bind(this);\n    }\n\n    backToLobby = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        return <div>\n        </div>\n    }\n}\nexport default withRouter(MarketView);","import './App.scss';\nimport {Component} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport GameView from \"./web/views/GameView\";\nimport HomeView from \"./web/views/HomeView\";\nimport MarketView from \"./web/views/MarketView\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faGithub, faLinkedinIn);\n\nconst routerBaseName = process.env.PUBLIC_URL;\n\ninterface AppProperties {\n}\n\ninterface AppState {\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n\n    render() {\n        return <div className=\"App\">\n            <main role=\"main\">\n                <BrowserRouter basename={routerBaseName}>\n                    <Switch>\n                        <Route path={\"/play\"}>\n                            <GameView/>\n                        </Route>\n                        <Route path={\"/market\"}>\n                            <MarketView/>\n                        </Route>\n                        <Route path={\"/\"}>\n                            <HomeView/>\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </main>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}